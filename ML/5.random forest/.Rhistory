source("B:/SY/SEM_1/DS/courceProject/DS_WaterPotability_Detection/ML/4.knn/knn/knn.R")
setwd("B:/SY/SEM_1/DS/courceProject/DS_WaterPotability_Detection/ML/2.SVM")
source("B:/SY/SEM_1/DS/courceProject/DS_WaterPotability_Detection/ML/2.SVM/SVM.R")
# Load libraries----
library(e1071)
library(caret)
# Load datasets----
data <- read.csv("half.csv")
# Load datasets----
data <- read.csv("half.csv")
data <- data[, -1]
data$Potability <- as.factor(data$Potability)
# Split the data into training and testing sets----
set.seed(123)
trainIndex <- createDataPartition(data$Potability, p = 0.7, list = FALSE)
trainData <- data[trainIndex, ]
testData <- data[-trainIndex, ]
# train model----
svm_model <- svm(Potability ~ ., data = trainData, kernel = "radial")
# test mpdel----
predictions <- predict(svm_model, testData)
conf_matrix <- confusionMatrix(predictions, testData$Potability)
# Display confusion matrix
print(conf_matrix)
help("svm")
source("B:/SY/SEM_1/DS/courceProject/DS_WaterPotability_Detection/ML/2.SVM/SVM.R")
source("B:/SY/SEM_1/DS/courceProject/DS_WaterPotability_Detection/ML/2.SVM/SVM.R")
install.packages("randomForest")
install.packages("e1071")
setwd("B:/SY/SEM_1/DS/courceProject/DS_WaterPotability_Detection/ML/random forest")
# Load libraries----
library(e1071)
library(caret)
library(randomForest)  # Load randomForest library
"B:/SY/SEM_1/DS/courceProject/DS_WaterPotability_Detection/ML/4.knn/half.csv"
setwd("B:/SY/SEM_1/DS/courceProject/DS_WaterPotability_Detection/ML/random forest")
# Load libraries----
library(e1071)
library(caret)
library(randomForest)  # Load randomForest library
# Load datasets----
data <- read.csv("half.csv")
data <- data[, -1]
data$Potability <- as.factor(data$Potability)
# Split the data into training and testing sets----
set.seed(123)
trainIndex <- createDataPartition(data$Potability, p = 0.7, list = FALSE)
trainData <- data[trainIndex, ]
testData <- data[-trainIndex, ]
# Train Random Forest model----
rf_model <- randomForest(Potability ~ ., data = trainData)
# Test model----
predictions <- predict(rf_model, testData)
conf_matrix <- confusionMatrix(predictions, testData$Potability)
# Display confusion matrix
print(conf_matrix)
369/(369+122)
